CCS PCM C Compiler, Version 5.115d, 1               29-ago.-23 16:26
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\victo\OneDrive\Documentos\X-TRAINER-hands-on\CCS\PIC16F\7-PWM-CCS-PIC16F887-877A\Proyecto\PIC16F877A\PWM1.lst

               ROM used:   129 words (2%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... PWM!.c
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /**************************************************************************
.................... Esta practica consiste en realizar un control PWM
.................... para regular la luminosidad de un led
.................... **************************************************************************/
.................... 
.................... #include <16F877A.h>                         //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC16F877A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F877A
.................... 
.................... #list
.................... 
.................... #use delay ( clock=20Mhz, crystal )          //Tipo de oscilador y frecuencia dependiendo del microcontrolador 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... 
.................... unsigned int16 Duty = 0;                     //Variable para guardar el valor para PWM
.................... 
.................... void main ( void )
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  CLRF   21
001C:  CLRF   20
001D:  MOVLW  FF
001E:  MOVWF  22
001F:  BSF    03.5
0020:  BSF    1F.0
0021:  BSF    1F.1
0022:  BSF    1F.2
0023:  BCF    1F.3
0024:  MOVLW  07
0025:  MOVWF  1C
0026:  BCF    03.7
.................... {
....................    setup_timer_2 ( T2_DIV_BY_16, 254, 1 );   //Configura Timer2, periodo ajustado a 342uS
0027:  MOVLW  00
0028:  MOVWF  78
0029:  IORLW  06
002A:  BCF    03.5
002B:  MOVWF  12
002C:  MOVLW  FE
002D:  BSF    03.5
002E:  MOVWF  12
....................    setup_ccp1 ( CCP_PWM );                   //Configura el módulo CCP para uso del PWM
002F:  BCF    03.5
0030:  BCF    22.2
0031:  MOVF   22,W
0032:  BSF    03.5
0033:  MOVWF  07
0034:  BCF    03.5
0035:  BCF    07.2
0036:  MOVLW  0C
0037:  MOVWF  17
.................... 
....................    while ( 1 ) {
....................       for ( Duty = 0; Duty < 255; Duty++ ) {
0038:  CLRF   21
0039:  CLRF   20
003A:  MOVF   21,F
003B:  BTFSS  03.2
003C:  GOTO   05B
003D:  MOVF   20,W
003E:  SUBLW  FE
003F:  BTFSS  03.0
0040:  GOTO   05B
....................          set_pwm1_duty ( Duty );             //Asigna el valor del Duty al PWM
0041:  MOVF   21,W
0042:  MOVWF  79
0043:  MOVF   20,W
0044:  MOVWF  78
0045:  RRF    79,F
0046:  RRF    78,F
0047:  RRF    79,F
0048:  RRF    78,F
0049:  RRF    79,F
004A:  MOVF   78,W
004B:  MOVWF  15
004C:  RRF    79,F
004D:  RRF    79,W
004E:  ANDLW  30
004F:  MOVWF  77
0050:  MOVF   17,W
0051:  ANDLW  CF
0052:  IORWF  77,W
0053:  MOVWF  17
....................          delay_ms ( 5 );                     //Retardo de 5ms
0054:  MOVLW  05
0055:  MOVWF  23
0056:  CALL   004
0057:  INCF   20,F
0058:  BTFSC  03.2
0059:  INCF   21,F
005A:  GOTO   03A
....................       }
....................       
....................       for ( Duty = 255; Duty > 0; Duty-- ) { // Ciclo para disminuir el valor de la variable
005B:  CLRF   21
005C:  MOVLW  FF
005D:  MOVWF  20
005E:  MOVF   20,F
005F:  BTFSS  03.2
0060:  GOTO   064
0061:  MOVF   21,F
0062:  BTFSC  03.2
0063:  GOTO   07F
....................          set_pwm1_duty ( Duty );             //Asigna el valor del Duty al PWM
0064:  MOVF   21,W
0065:  MOVWF  79
0066:  MOVF   20,W
0067:  MOVWF  78
0068:  RRF    79,F
0069:  RRF    78,F
006A:  RRF    79,F
006B:  RRF    78,F
006C:  RRF    79,F
006D:  MOVF   78,W
006E:  MOVWF  15
006F:  RRF    79,F
0070:  RRF    79,W
0071:  ANDLW  30
0072:  MOVWF  77
0073:  MOVF   17,W
0074:  ANDLW  CF
0075:  IORWF  77,W
0076:  MOVWF  17
....................          delay_ms ( 5 );                     // Retardo de 5ms
0077:  MOVLW  05
0078:  MOVWF  23
0079:  CALL   004
007A:  MOVF   20,W
007B:  BTFSC  03.2
007C:  DECF   21,F
007D:  DECF   20,F
007E:  GOTO   05E
....................       }
007F:  GOTO   038
....................    }
.................... }
0080:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
