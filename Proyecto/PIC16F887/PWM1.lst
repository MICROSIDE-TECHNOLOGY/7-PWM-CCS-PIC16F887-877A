CCS PCM C Compiler, Version 5.115d, 1               29-ago.-23 16:28
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\victo\OneDrive\Documentos\X-TRAINER-hands-on\CCS\PIC16F\7-PWM-CCS-PIC16F887-877A\Proyecto\PIC16F887\PWM1.lst

               ROM used:   143 words (2%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   018
0003:  NOP
.................... /************************************************************************************************
.................... Company:
.................... Microside Technology Inc.
.................... File Name:
.................... PWM1.c
.................... Product Revision  :  1
.................... Device            :  X-TRAINER
.................... Driver Version    :  1.0
.................... ************************************************************************************************/
.................... 
.................... /**************************************************************************
.................... Esta practica consiste en realizar un control PWM
.................... para regular la luminosidad de un led
.................... **************************************************************************/
.................... 
.................... #include <16F887.h>                          //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
.................... 
.................... #list
.................... 
.................... #use delay ( clock=20Mhz, crystal )          //Tipo de oscilador y frecuencia dependiendo del microcontrolador 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
.................... 
.................... unsigned int16 Duty = 0;                     //Variable para guardar el valor para PWM
.................... 
.................... void main ( void )
0018:  MOVF   03,W
0019:  ANDLW  1F
001A:  MOVWF  03
001B:  CLRF   21
001C:  CLRF   20
001D:  MOVLW  FF
001E:  MOVWF  22
001F:  BSF    03.5
0020:  BSF    03.6
0021:  MOVF   09,W
0022:  ANDLW  C0
0023:  MOVWF  09
0024:  BCF    03.6
0025:  BCF    1F.4
0026:  BCF    1F.5
0027:  MOVLW  00
0028:  BSF    03.6
0029:  MOVWF  08
002A:  BCF    03.5
002B:  CLRF   07
002C:  CLRF   08
002D:  CLRF   09
002E:  BCF    03.7
.................... {
....................    setup_timer_2 (T2_DIV_BY_16, 254, 1);     //Configura Timer2, periodo ajustado a 342uS
002F:  MOVLW  00
0030:  MOVWF  78
0031:  IORLW  06
0032:  BCF    03.6
0033:  MOVWF  12
0034:  MOVLW  FE
0035:  BSF    03.5
0036:  MOVWF  12
....................    setup_ccp1 (CCP_PWM|CCP_SHUTDOWN_AC_L|CCP_SHUTDOWN_BD_L); //Configura el módulo CCP para uso del PWM
0037:  BCF    03.5
0038:  BCF    22.2
0039:  MOVF   22,W
003A:  BSF    03.5
003B:  MOVWF  07
003C:  BCF    03.5
003D:  BCF    07.2
003E:  MOVLW  0C
003F:  MOVWF  17
0040:  BSF    03.5
0041:  CLRF   1B
0042:  CLRF   1C
0043:  MOVLW  01
0044:  MOVWF  1D
.................... 
....................    while ( 1 ) {
....................       for ( Duty = 0; Duty < 255; Duty++ ) {
0045:  BCF    03.5
0046:  CLRF   21
0047:  CLRF   20
0048:  MOVF   21,F
0049:  BTFSS  03.2
004A:  GOTO   069
004B:  MOVF   20,W
004C:  SUBLW  FE
004D:  BTFSS  03.0
004E:  GOTO   069
....................          set_pwm1_duty ( Duty );             //Asigna el valor del Duty al PWM
004F:  MOVF   21,W
0050:  MOVWF  79
0051:  MOVF   20,W
0052:  MOVWF  78
0053:  RRF    79,F
0054:  RRF    78,F
0055:  RRF    79,F
0056:  RRF    78,F
0057:  RRF    79,F
0058:  MOVF   78,W
0059:  MOVWF  15
005A:  RRF    79,F
005B:  RRF    79,W
005C:  ANDLW  30
005D:  MOVWF  77
005E:  MOVF   17,W
005F:  ANDLW  CF
0060:  IORWF  77,W
0061:  MOVWF  17
....................          delay_ms ( 5 );                     //Retardo de 5ms
0062:  MOVLW  05
0063:  MOVWF  23
0064:  CALL   004
0065:  INCF   20,F
0066:  BTFSC  03.2
0067:  INCF   21,F
0068:  GOTO   048
....................       }
....................       
....................       for ( Duty = 255; Duty > 0; Duty-- ) { // Ciclo para disminuir el valor de la variable
0069:  CLRF   21
006A:  MOVLW  FF
006B:  MOVWF  20
006C:  MOVF   20,F
006D:  BTFSS  03.2
006E:  GOTO   072
006F:  MOVF   21,F
0070:  BTFSC  03.2
0071:  GOTO   08D
....................          set_pwm1_duty ( Duty );             //Asigna el valor del Duty al PWM
0072:  MOVF   21,W
0073:  MOVWF  79
0074:  MOVF   20,W
0075:  MOVWF  78
0076:  RRF    79,F
0077:  RRF    78,F
0078:  RRF    79,F
0079:  RRF    78,F
007A:  RRF    79,F
007B:  MOVF   78,W
007C:  MOVWF  15
007D:  RRF    79,F
007E:  RRF    79,W
007F:  ANDLW  30
0080:  MOVWF  77
0081:  MOVF   17,W
0082:  ANDLW  CF
0083:  IORWF  77,W
0084:  MOVWF  17
....................          delay_ms ( 5 );                     // Retardo de 5ms
0085:  MOVLW  05
0086:  MOVWF  23
0087:  CALL   004
0088:  MOVF   20,W
0089:  BTFSC  03.2
008A:  DECF   21,F
008B:  DECF   20,F
008C:  GOTO   06C
....................       }
008D:  GOTO   046
....................    }
.................... }
008E:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
